<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hzz.remark.infrastructure.dao.mapper.liked.LikedRecordMapper">
    <resultMap id="BaseResultMap" type="org.hzz.remark.infrastructure.dao.model.liked.LikedRecord">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="biz_id" jdbcType="BIGINT" property="bizId" />
        <result column="biz_type" jdbcType="VARCHAR" property="bizType" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, biz_id, biz_type, create_time, update_time
    </sql>
    <select id="selectByExample" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecordExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from liked_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from liked_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from liked_record
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecordExample">
        delete from liked_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecord">
        insert into liked_record (id, user_id, biz_id,
                                  biz_type, create_time, update_time
        )
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{bizId,jdbcType=BIGINT},
                #{bizType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
               )
    </insert>
    <insert id="insertSelective" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecord">
        insert into liked_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="bizId != null">
                biz_id,
            </if>
            <if test="bizType != null">
                biz_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="bizId != null">
                #{bizId,jdbcType=BIGINT},
            </if>
            <if test="bizType != null">
                #{bizType,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecordExample" resultType="java.lang.Long">
        select count(*) from liked_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update liked_record
        <set>
            <if test="row.id != null">
                id = #{row.id,jdbcType=BIGINT},
            </if>
            <if test="row.userId != null">
                user_id = #{row.userId,jdbcType=BIGINT},
            </if>
            <if test="row.bizId != null">
                biz_id = #{row.bizId,jdbcType=BIGINT},
            </if>
            <if test="row.bizType != null">
                biz_type = #{row.bizType,jdbcType=VARCHAR},
            </if>
            <if test="row.createTime != null">
                create_time = #{row.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="row.updateTime != null">
                update_time = #{row.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update liked_record
        set id = #{row.id,jdbcType=BIGINT},
        user_id = #{row.userId,jdbcType=BIGINT},
        biz_id = #{row.bizId,jdbcType=BIGINT},
        biz_type = #{row.bizType,jdbcType=VARCHAR},
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
        update_time = #{row.updateTime,jdbcType=TIMESTAMP}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecord">
        update liked_record
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="bizId != null">
                biz_id = #{bizId,jdbcType=BIGINT},
            </if>
            <if test="bizType != null">
                biz_type = #{bizType,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hzz.remark.infrastructure.dao.model.liked.LikedRecord">
        update liked_record
        set user_id = #{userId,jdbcType=BIGINT},
            biz_id = #{bizId,jdbcType=BIGINT},
            biz_type = #{bizType,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>