<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hzz.learning.infrastructure.dao.mapper.reply.InteractionReplyExtMapper">

    <sql id="Base_Column_List">
        id, question_id, answer_id, user_id, content, target_user_id, target_reply_id, reply_times,
    liked_times, hidden, anonymity, create_time, update_time
    </sql>

    <update id="incrReplyTimes">
        update interaction_reply
        set reply_times = reply_times + 1
        where id = #{id}
    </update>

    <select id="pageSelect" resultType="org.hzz.learning.infrastructure.dao.entity.reply.InteractionReply">
        select
        <include refid="Base_Column_List"/>
        from interaction_reply
        <where>
            <if test="filters != null">
                <foreach item="filter" collection="filters" separator=" AND ">
                    <choose>
                        <when test="filter.operator == 'in'">
                            ${filter.field} IN
                            <foreach item="item" collection="filter.value" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </when>
                        <otherwise>
                            ${filter.field} ${filter.operator} #{filter.value}
                        </otherwise>
                    </choose>
                </foreach>
            </if>
        </where>
        <if test="orderByClause != null and orderByClause != ''">
            ORDER BY ${orderByClause}
        </if>
        <if test="orderByClause == null or orderByClause == ''">
            ORDER BY create_time DESC
        </if>
        <if test="limit != null and offset != null">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="countRecords" resultType="int">
        SELECT COUNT(*) FROM interaction_reply
        <where>
            <if test="filters != null">
                <foreach item="filter" collection="filters" separator=" AND ">
                    <choose>
                        <when test="filter.operator == 'in'">
                            ${filter.field} IN
                            <foreach item="item" collection="filter.value" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </when>
                        <otherwise>
                            ${filter.field} ${filter.operator} #{filter.value}
                        </otherwise>
                    </choose>
                </foreach>
            </if>
        </where>
    </select>


    <update id="updateBatchByPrimarySelective" parameterType="org.hzz.learning.infrastructure.dao.entity.reply.InteractionReply">
        update interaction_reply
        <set>
            <if test="list[0].likedTimes != null">
                liked_times = CASE
                <foreach collection="list" item="reply" separator=" ">
                    WHEN id = #{reply.id} THEN #{reply.likedTimes}
                </foreach>
                ELSE liked_times
                END
            </if>
        </set>
        where id IN
        <foreach collection="list" item="reply" open="(" separator="," close=")">
            #{reply.id}
        </foreach>
    </update>
</mapper>