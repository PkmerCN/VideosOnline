<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hzz.user.infrastructure.dao.mapper.details.UserDetailMapper">
  <resultMap id="BaseResultMap" type="org.hzz.user.infrastructure.dao.entity.details.UserDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="course_amount" jdbcType="SMALLINT" property="courseAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="creater" jdbcType="BIGINT" property="creater" />
    <result column="updater" jdbcType="BIGINT" property="updater" />
    <result column="dep_id" jdbcType="BIGINT" property="depId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, name, gender, icon, email, qq, birthday, job, province, city, district, 
    intro, photo, role_id, course_amount, create_time, update_time, creater, updater, 
    dep_id
  </sql>
  <select id="selectByExample" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetailExample">
    delete from user_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetail">
    insert into user_detail (id, type, name, 
      gender, icon, email, 
      qq, birthday, job, province, 
      city, district, intro, 
      photo, role_id, course_amount, 
      create_time, update_time, creater, 
      updater, dep_id)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{icon,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{job,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{roleId,jdbcType=BIGINT}, #{courseAmount,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=BIGINT}, 
      #{updater,jdbcType=BIGINT}, #{depId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetail">
    insert into user_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="courseAmount != null">
        course_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="depId != null">
        dep_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="courseAmount != null">
        #{courseAmount,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=BIGINT},
      </if>
      <if test="depId != null">
        #{depId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetailExample" resultType="java.lang.Long">
    select count(*) from user_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_detail
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.type != null">
        type = #{row.type,jdbcType=TINYINT},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=TINYINT},
      </if>
      <if test="row.icon != null">
        icon = #{row.icon,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.qq != null">
        qq = #{row.qq,jdbcType=VARCHAR},
      </if>
      <if test="row.birthday != null">
        birthday = #{row.birthday,jdbcType=DATE},
      </if>
      <if test="row.job != null">
        job = #{row.job,jdbcType=VARCHAR},
      </if>
      <if test="row.province != null">
        province = #{row.province,jdbcType=VARCHAR},
      </if>
      <if test="row.city != null">
        city = #{row.city,jdbcType=VARCHAR},
      </if>
      <if test="row.district != null">
        district = #{row.district,jdbcType=VARCHAR},
      </if>
      <if test="row.intro != null">
        intro = #{row.intro,jdbcType=VARCHAR},
      </if>
      <if test="row.photo != null">
        photo = #{row.photo,jdbcType=VARCHAR},
      </if>
      <if test="row.roleId != null">
        role_id = #{row.roleId,jdbcType=BIGINT},
      </if>
      <if test="row.courseAmount != null">
        course_amount = #{row.courseAmount,jdbcType=SMALLINT},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.creater != null">
        creater = #{row.creater,jdbcType=BIGINT},
      </if>
      <if test="row.updater != null">
        updater = #{row.updater,jdbcType=BIGINT},
      </if>
      <if test="row.depId != null">
        dep_id = #{row.depId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_detail
    set id = #{row.id,jdbcType=BIGINT},
      type = #{row.type,jdbcType=TINYINT},
      name = #{row.name,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=TINYINT},
      icon = #{row.icon,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      qq = #{row.qq,jdbcType=VARCHAR},
      birthday = #{row.birthday,jdbcType=DATE},
      job = #{row.job,jdbcType=VARCHAR},
      province = #{row.province,jdbcType=VARCHAR},
      city = #{row.city,jdbcType=VARCHAR},
      district = #{row.district,jdbcType=VARCHAR},
      intro = #{row.intro,jdbcType=VARCHAR},
      photo = #{row.photo,jdbcType=VARCHAR},
      role_id = #{row.roleId,jdbcType=BIGINT},
      course_amount = #{row.courseAmount,jdbcType=SMALLINT},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      creater = #{row.creater,jdbcType=BIGINT},
      updater = #{row.updater,jdbcType=BIGINT},
      dep_id = #{row.depId,jdbcType=BIGINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetail">
    update user_detail
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="courseAmount != null">
        course_amount = #{courseAmount,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=BIGINT},
      </if>
      <if test="depId != null">
        dep_id = #{depId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hzz.user.infrastructure.dao.entity.details.UserDetail">
    update user_detail
    set type = #{type,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      icon = #{icon,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      job = #{job,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=BIGINT},
      course_amount = #{courseAmount,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=BIGINT},
      updater = #{updater,jdbcType=BIGINT},
      dep_id = #{depId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>